name: Alpha Build

on:
  workflow_dispatch:

permissions: write-all

env:
  CARGO_TERM_COLOR: always

jobs:
  delete-old-assets:
    runs-on: ubuntu-latest
    steps:
      - name: "Delete Old Alpha Release Assets"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const releaseTag = 'alpha';

            try {
              // Get the release by tag name
              const { data: release } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: releaseTag
              });

              console.log(`Found release with ID: ${release.id}`);

              // Delete each asset
              if (release.assets && release.assets.length > 0) {
                console.log(`Deleting ${release.assets.length} assets`);

                for (const asset of release.assets) {
                  console.log(`Deleting asset: ${asset.name} (${asset.id})`);
                  await github.rest.repos.deleteReleaseAsset({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    asset_id: asset.id
                  });
                }

                console.log('All assets deleted successfully');
              } else {
                console.log('No assets found to delete');
              }
            } catch (error) {
              if (error.status === 404) {
                console.log('Release not found, nothing to delete');
              } else {
                console.error('Error:', error);
                throw error;
              }
            }

  update-tag:
    runs-on: ubuntu-latest
    needs: delete-old-assets
    steps:
      - run: |
          echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV
        shell: bash
      - run: |
          cat > release.txt << EOF
          **Created At: ${{ env.BUILDTIME }}**
          EOF
      - name: "Upload Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: alpha
          name: "dotprofiles-alpha"
          body_path: release.txt
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true

  alpha-for-windows:
    needs: update-tag
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: "Build dotprofiles (Release Mode)"
        shell: cmd
        run: |
          PATH C:\Strawberry\perl\bin;%PATH%
          cargo build -p dotprofiles --release
      - name: "Upload Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: alpha
          name: "dotprofiles-alpha"
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: target/release/dotprofiles.exe
